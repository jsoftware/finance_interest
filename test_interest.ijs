NB. test interest functions.

load 'finance/interest'

NB. =========================================================
test=: 3 : 0
rnd=. 4 : 'a%~<.0.5+y*a=.10^x'
int=. 0.10 3 0.09
frq=. 12
imm=. 1
pay=. 5
ndx=. 0.025
j=. 8 rnd 2 intrep 0.065 2 0.05
k=. 0.03198837 0.03198837 0.03198837 0.03198837 0.02469508

assert. (*/\>:1 2 3#0 0.07 0.065)-:5 accint 0.07 2 0.065
assert. 0.07 0.07 0.07 0.065-:intexpand 0.07 3 0.065
assert. (<:1.10^0.5)-:2 intm 0.10
assert. j-:k
assert. (7 rnd 2 vrep 0.065 2 0.05)-:7 rnd %>:k
assert. 1.0450447 2.22072 3.5407421 4.9800302 6.5768697-:7 rnd accndx imm;frq;int;pay;ndx
assert. 5.2252236-: {.7 rnd accpay imm;frq;int;pay
assert. 0.01773493 0.46530518 0.00095845 0.01677648-:8 rnd 33{amort frq;ndx;pay
assert. 4.7502033-:7 rnd npv imm;frq;int;pay
assert. 1 0.80975314 0.61475011 0.414872 0.20999694 0-:8 rnd osb ndx;pay
assert. 1 0.66666667 0.4 0.2 0.06666667 0-:8 rnd ruleof78 pay
assert. 1 0.90909091 0.82644628 0.7513148 0.68927963-:8 rnd int vt i.pay
assert. 0.12039-:5 rnd irr _100 10 11 12 13 14 15 16 17 100

AA=. 8 rnd 7.54553389 12.08015148 14.86401331
BB=. 8 rnd 7.50985728 12.02607524 14.7986413
CC=. 8 rnd 5.78744882 9.34044036 11.52166895
DD=. 8 rnd 7.50985728 12.02607524 14.7986413
AA1=. 8 rnd 8.31958814 14.44260555 19.02480745
BB1=. 8 rnd 8.28050721 14.37867991 18.94228911
CC1=. 8 rnd 6.38984139 11.18738575 14.77766084
DD1=. 8 rnd 8.28050721 14.37867991 18.94228911

assert. AA-:8 rnd annt(10 20 30);(0 0 12);(0.065 5 0.05);0
assert. BB-:8 rnd annt(10 20 30);(1 0 12);(0.065 5 0.05);0
assert. CC-:8 rnd annt(10 20 30);(0 5 12);(0.065 5 0.05);0
assert. DD-:8 rnd annt(10 20 30);(1 0 12);(0.065 5 0.05);0
assert. AA1-:8 rnd annt(10 20 30);(0 0 12);(0.065 5 0.05);(0.03 2 0.02)
assert. BB1-:8 rnd annt(10 20 30);(1 0 12);(0.065 5 0.05);(0.03 2 0.02)
assert. CC1-:8 rnd annt(10 20 30);(0 5 12);(0.065 5 0.05);(0.03 2 0.02)
assert. DD1-:8 rnd annt(10 20 30);(1 0 12);(0.065 5 0.05);(0.03 2 0.02)

smoutput 'test interest done'
)

test''
